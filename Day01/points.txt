Python Programming
------------------
Introduction

Primitive Data Types
--------------------
1. Numbers
   a. integers
   b. float
   c. complex numbers
2. Strings
3. Boolean

Operators

loops and control structures

Functions

Oops

Modules


Introduction to python
----------------------
1. python is an opensource technology


Desktop App - 		TKinter(tcl / tk), Kivy, PyQt, wxPython

Web App     -		MVC, REST API - Flask, FAST, Django

Mobile App  - 		Kivy

Testing	    -		Unit Test, Document Test, Pytest, Robot FrameWork, Selenium

Automation  - 		paramiko, scrapy, playwright

Webscrapping - 		Beautiful Soup, requests

Data Science -		Numpy, Pandas, matplotlib, seaborn

Machine Learning, Deep Learning - 

Artificial Intelligence

Gen AI, Agent AI

Python (www.python.org)
-----------------------
Versions of python - 2.x vs 3.x

Latest version of Python - 3.13 (GIL free)

cons - it does not support tensor flow

flavours of Python
------------------
1. CPython	- Currently working

2. Jython	- python code will execute on JVM

3. Iron Python	- Python code will execute in CLI (dotnet framework)


Python
------
1. Python SDK

2. IDLE - Integrated Development Environment

3. Shell - Interactive environment 


Python IDE
----------
PyCharm - CE

VS code - CE

Eclipse - 

Sublime text

Anaconda - Jupyter notebook, Spyder

Google colabs

Python data types(2.x)
----------------------
Numbers
  a. integer
  b. long  (deprecated in 3.x (Removed))
  c. float
  d. complex


long = 2309428340823489754623456L

Operators overloaded
-------------------
1. + => addition and concatenation

2. * => multiplication and to print a string n number of times

import importlib  => all functions

import importlib.reload

---------------------------------------------

from importlib import reload

reload()

-------------------------------------------------------------------------
sample.py
---------
#! c:\python

print("Hello World\n" * 5)

-----------------------------------------

#!  - shebang 	- used to specify the path of executable files (python.exe)


Comments
--------
# - is used for comments in python, and it is used for single line comments


strings
-------
we can include strings in " " or  ' ', there no difference - single line string

"this is the first line" 

def fun():
	"this is a function that takes two arguments"


doc strings

multiple line strings are enclosed in """  """ or  '''   '''

"""
this is the first line.
this is the second line.
this is the third line.
"""

'''
this is the first line.
this is the second line.
this is the third line.
'''

in python we don't depend on parenthesis (brackets), instead we use tabs or indentation

python is case sensitive

Variables
---------
1. should start with a alphabet
2. can have numbers in between
3. cant have special characters
4. we can use - or _ 
5. No key words as variable names (if, and, print, for)


Numbers
-------

Bitwise operators
-----------------
or
--
5- 0101
3- 0011
   ----
   0111 = 4 + 2 + 1 => 7
   ----

and
---
5 - 0101
3 - 0011
    ----
    0001  = 1 
    ----

xor
---

1  1  0
0  1  1
1  0  1
0  0  0

5 - 0101
3 - 0011
    ----
    0110  -> 4 + 2 = 6
    ----

shift operators
---------------
5 << 1

0101 << 1
1010 -> 8 + 2 = 10

8 << 1
1000 << 1
10000 => 16

5 << 2
0101 << 2
10100 > 20

16 >> 1
10000 >> 1
1000 => 8

5 >> 1
0101
0010 => 2

if condition
-------------
if condition:
    true
elif condition:
    true
else:
    false


Loops
-----
1. forloop
2. while loop


for loop
--------
start value
incr value
stop value

for loop similar to foreach loop 

foreach loop depends on collection of objects

for loop depends on numbers generated by range function

print(data, sep=, end="\n")

-----------------------------------------------------
problems

1
23
456
78910

1 2 3 4 5
 1 2 3 4
  1 2 3
   1 2
    1
   2 1
  3 2 1
 4 3 2 1
5 4 3 2 1

print all prime numbers between 150 and 50 and also print the count of it.

Strings
-------

Strings are immutable
---------------------
how stored in python?










